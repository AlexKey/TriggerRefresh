{"ts":1359847096521,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World from Cloud9\\n');\n}).listen(process.env.PORT);\n"]],"start1":0,"start2":0,"length1":0,"length2":191}]],"length":191}
{"contributors":[],"silentsave":false,"ts":1359847171969,"patch":[[{"diffs":[[1,"\n"],[0,"var "],[-1,"http"],[1,"openid"],[0," = r"]],"start1":0,"start2":0,"length1":12,"length2":15},{"diffs":[[0,"re('"],[-1,"http');\n"],[1,"openid');\nvar url = require('url');\nvar server = require('"],[0,"http"],[1,"')"],[0,".cre"]],"start1":19,"start2":19,"length1":20,"length2":72},{"diffs":[[0,"ver("],[1,"\n    "],[0,"function"],[-1," (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World from Cloud9\\n');\n})"],[1,"(req, res)\n    {\n        var parsedUrl = url.parse(req.url, true);\n        if(parsedUrl.pathname == '/verify')\n        {\n            // Verify identity assertion\n            var result = openid.verifyAssertion(req); // or req.url\n            res.writeHead(200);\n            res.end(result.authenticated ? 'Success  ' : 'Failure  ');\n        }\n        else if(parsedUrl.pathname == '/authenticate')\n        {\n            // Resolve identifier, associate, build authentication URL\n            openid.authenticate(\n                parsedUrl.query.openid_identifier, // user supplied identifier\n                'http://example.com/verify', // our callback URL\n                null, // realm (optional)\n                false, // attempt immediate authentication first?\n                function(authUrl)\n                {\n                    res.writeHead(302, { Location: authUrl });\n                    res.end();\n                });\n        }\n        else\n        {\n            // Deliver an OpenID form on all other URLs\n            res.writeHead(200);\n            res.end('<!DOCTYPE html><html><body>'\n                + '<form method=\"get\" action=\"/authenticate\">'\n                + '<p>Login using OpenID</p>'\n                + '<input name=\"openid_identifier\" />'\n                + '<input type=\"submit\" value=\"Login\" />'\n                + '</form></body></html>');\n        }\n    });\nserver"],[0,".lis"]],"start1":97,"start2":97,"length1":126,"length2":1412},{"diffs":[[0,"v.PORT);"],[-1,"\n"]],"start1":1523,"start2":1523,"length1":9,"length2":8}]],"length":1531,"saved":false}
{"ts":1359847334781,"patch":[[{"diffs":[[0,"p://"],[-1,"example.com"],[1,"triggerrefresh.alexkey.c9.io"],[0,"/ver"]],"start1":725,"start2":725,"length1":19,"length2":36}]],"length":1548,"saved":false}
{"ts":1359847370936,"patch":[[{"diffs":[[0,"ey.c9.io"],[1,":'+ process.env.PORT+ '"],[0,"/verify'"]],"start1":749,"start2":749,"length1":16,"length2":39}]],"length":1571,"saved":false}
{"ts":1359848012800,"patch":[[{"diffs":[[0,"sh.a"],[-1,"lexkey.c9.io:'+ process.env.PORT+ '"],[1,"zurewebsites.net"],[0,"/ver"]],"start1":741,"start2":741,"length1":43,"length2":24}]],"length":1552,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359849805253,"patch":[[{"diffs":[[0,"ten("],[-1,"process.env.PORT"],[1,"80"],[0,");"]],"start1":1530,"start2":1530,"length1":22,"length2":8}]],"length":1538,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359850455658,"patch":[[{"diffs":[[-1,"\n"],[0,"var openid ="]],"start1":0,"start2":0,"length1":13,"length2":12}]],"length":1537,"saved":false}
{"ts":1359851090297,"patch":[[{"diffs":[[0,"ire('url');\n"],[1,"var querystring = require('querystring');\nvar relyingParty = new openid.RelyingParty(\n    'http://triggerrefresh.azurewebsites.net/verify', // Verification URL (yours)\n    null, // Realm (optional, specifies realm for OpenID authentication)\n    false, // Use stateless verification\n    false, // Strict mode\n    []); // List of extensions to enable and include\n\n\n"],[0,"var server ="]],"start1":46,"start2":46,"length1":24,"length2":387},{"diffs":[[0,".url"],[-1,", true"],[0,");\n "]],"start1":530,"start2":530,"length1":14,"length2":8},{"diffs":[[0,"me == '/"],[-1,"verify"],[1,"authenticate"],[0,"')\n     "]],"start1":564,"start2":564,"length1":22,"length2":28},{"diffs":[[0,"cate')\n        {"],[-1,"\n"],[0," "],[1,"\n"],[0,"           // Ve"]],"start1":580,"start2":580,"length1":34,"length2":34},{"diffs":[[0,"    "],[-1," "],[0,"// "],[-1,"Verify identity assertion\n            var result = openid.verifyAssertion(req); // or req.url\n"],[1,"User supplied identifier\n          var query = querystring.parse(parsedUrl.query);\n          var identifier = query.openid_identifier;\n\n          // Resolve identifier, associate, and build authentication URL\n          relyingParty.authenticate(identifier, false, function(error, authUrl)\n              {\n                if (error)\n                {\n      "],[0,"    "]],"start1":604,"start2":604,"length1":106,"length2":367},{"diffs":[[0,"    "],[1,"      "],[0,"res.end("],[-1,"result.a"],[1,"'A"],[0,"uthe"]],"start1":1007,"start2":1007,"length1":24,"length2":24},{"diffs":[[0,"icat"],[-1,"ed ? 'Success  ' : 'Failure  ');\n"],[1,"ion failed: ' + error.message);\n        "],[0,"    "]],"start1":1033,"start2":1033,"length1":41,"length2":48},{"diffs":[[0,"    "],[1,"    "],[1,"    "],[0,"else if"],[-1,"(parsedUrl.pathname == '/authenticate"],[1," (!authUrl)\n                {\n                  res.writeHead(200);\n                  res.end('Authentication failed"],[0,"')"],[1,";"],[0,"\n   "]],"start1":1091,"start2":1091,"length1":54,"length2":142},{"diffs":[[0,"iled');\n        "],[-1,"{"],[1,"        }"],[0,"\n            // "]],"start1":1222,"start2":1222,"length1":33,"length2":41},{"diffs":[[0,"    "],[-1,"// Resolve identifier, ass"],[1,"    else\n                {\n                  res.writeHead(302, { L"],[0,"oc"],[-1,"i"],[0,"at"],[-1,"e, build authentication URL\n            openid.authenticate(\n                parsedUrl.query.openid_identifier, // user supplied identifier"],[1,"ion: authUrl });\n                  res.end();\n                }\n              });"],[0,"\n   "]],"start1":1256,"start2":1256,"length1":178,"length2":160},{"diffs":[[0,"    "],[1,"}\n"],[0,"        "],[-1,"'http://triggerrefresh.azurewebsites.net/verify', // our callback URL\n                null, // realm (op"],[1,"else if(parsedUrl.pathname == '/verify')\n        {\n            // Verify identity asser"],[0,"tion"],[-1,"al)"],[0,"\n   "]],"start1":1417,"start2":1417,"length1":127,"length2":109},{"diffs":[[0,"    "],[-1,"    false, // attempt immediate authentication first?\n                function(authUrl)\n   "],[1,"// NOTE: Passing just the URL is also possible\n            relyingParty.verifyAssertion(req, function(error, result)\n"],[0,"    "]],"start1":1531,"start2":1531,"length1":99,"length2":125},{"diffs":[[0,"            "],[-1," "],[0,"{\n"],[-1,"      "],[0,"            "]],"start1":1652,"start2":1652,"length1":33,"length2":26},{"diffs":[[0,"ead("],[-1,"302, { Location: authUrl });\n                    res.end();\n    "],[1,"200);\n              res.end(!error && result.authenticated \n                  ? 'Success :)'\n                  : 'Failure :(');\n"],[0,"    "]],"start1":1690,"start2":1690,"length1":72,"length2":136}]],"length":2311,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359851333766,"patch":[[{"diffs":[[0,"clude\n\n\n"],[1,"\n"],[0,"var serv"]],"start1":413,"start2":413,"length1":16,"length2":17}]],"length":2312,"saved":false}
{"ts":1359851339222,"patch":[[{"diffs":[[0,"lude\n\n\n\n"],[1,"\n"],[0,"var serv"]],"start1":414,"start2":414,"length1":16,"length2":17}]],"length":2313,"saved":false}
{"ts":1359851380231,"patch":[[{"diffs":[[0,"include\n"],[1,"asd"],[0,"\n\n\n\nvar "]],"start1":411,"start2":411,"length1":16,"length2":19}]],"length":2316,"saved":false}
{"ts":1359851406997,"patch":[[{"diffs":[[0,"ude\n"],[1,"-"],[0,"a"],[-1,"sd\n\n\n"],[0,"\nvar"]],"start1":415,"start2":415,"length1":14,"length2":10}]],"length":2312,"saved":false}
{"ts":1359851658544,"patch":[[{"diffs":[[0,"ude\n"],[-1,"-a"],[0,"\nvar"]],"start1":415,"start2":415,"length1":10,"length2":8},{"diffs":[[0,".listen("],[1,"process.env.PORT || "],[0,"80);"]],"start1":2298,"start2":2298,"length1":12,"length2":32}]],"length":2330,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360142300987,"patch":[[{"diffs":[[0,"ccess :)"],[1," :-)"],[0,"'\n      "]],"start1":1776,"start2":1776,"length1":16,"length2":20}]],"length":2334,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362940262150,"patch":[[{"diffs":[[0,"sh.a"],[-1,"zurewebsites.net"],[1,"lexkey.c9.io"],[0,"/ver"]],"start1":168,"start2":168,"length1":24,"length2":20},{"diffs":[[0," (yours)"],[1," 'http://triggerrefresh.azurewebsites.net/verify'"],[0,"\n    nul"]],"start1":213,"start2":213,"length1":16,"length2":65}]],"length":2379,"saved":false}
{"ts":1362942232374,"patch":[[{"diffs":[[0,"ID</p>'\n"],[1,"                + '<input name=\"openid_identifier\" type=\"image\" value=\"https://www.google.com/accounts/o8/id\" />'\n"],[0,"        "]],"start1":2158,"start2":2158,"length1":16,"length2":130}]],"length":2493,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362942538071,"patch":[[{"diffs":[[0,"pe=\""],[-1,"image"],[1,"button"],[0,"\" va"]],"start1":2219,"start2":2219,"length1":13,"length2":14},{"diffs":[[0,"s/o8/id\""],[-1," />"],[1,">Google</input"],[0,"'\n      "]],"start1":2268,"start2":2268,"length1":19,"length2":30}]],"length":2505,"saved":false}
{"ts":1362942549123,"patch":[[{"diffs":[[0,"e</input"],[1,">"],[0,"'\n      "]],"start1":2282,"start2":2282,"length1":16,"length2":17}]],"length":2506,"saved":false}
{"ts":1362942569486,"patch":[[{"diffs":[[0,"            + '<"],[-1,"input"],[1,"button"],[0," name=\"openid_id"]],"start1":2170,"start2":2170,"length1":37,"length2":38},{"diffs":[[0,"ier\""],[-1," type=\"button\""],[0," val"]],"start1":2213,"start2":2213,"length1":22,"length2":8},{"diffs":[[0,"Google</"],[-1,"input"],[1,"button"],[0,">'\n     "]],"start1":2264,"start2":2264,"length1":21,"length2":22}]],"length":2494,"saved":false}
{"ts":1362942602883,"patch":[[{"diffs":[[0,"n>'\n"],[-1,"                + '<input name=\"openid_identifier\" />'\n"],[0,"    "]],"start1":2277,"start2":2277,"length1":63,"length2":8}]],"length":2439,"saved":false}
{"ts":1362942624829,"patch":[[{"diffs":[[0,"n>'\n"],[-1,"                + '<input type=\"submit\" value=\"Login\" />'\n"],[0,"    "]],"start1":2277,"start2":2277,"length1":66,"length2":8}]],"length":2381,"saved":false}
{"ts":1362942742260,"patch":[[{"diffs":[[0,"ntifier\""],[1," type=\"submit\""],[0," value=\""]],"start1":2209,"start2":2209,"length1":16,"length2":30}]],"length":2395,"saved":false}
{"ts":1362943292525,"patch":[[{"diffs":[[0,"    + '<"],[-1,"button"],[1,"input"],[0," name=\"o"]],"start1":2178,"start2":2178,"length1":22,"length2":21},{"diffs":[[0,"er\" "],[-1,"type=\"submit\" value=\"https://www.google.com/accounts/o8/id\">Google</button"],[1,"/>'\n                + '<input type=\"submit\" value=\"Login\" /"],[0,">'\n "]],"start1":2213,"start2":2213,"length1":82,"length2":67}]],"length":2379,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364755602408,"patch":[[{"diffs":[[0,")\n            {\n"],[1,"                console.log(result);\n"],[0,"              re"]],"start1":1694,"start2":1694,"length1":32,"length2":69},{"diffs":[[0,"ntifier\""],[1," value=\"https://www.google.com/accounts/o8/id\""],[0," />'\n   "]],"start1":2245,"start2":2245,"length1":16,"length2":62}]],"length":2462,"saved":false}
{"ts":1364755822618,"patch":[[{"diffs":[[0,"ole.log("],[-1,"result"],[1,"\"hello\""],[0,");\n     "]],"start1":1730,"start2":1730,"length1":22,"length2":23}]],"length":2463,"saved":false}
{"ts":1364755996459,"patch":[[{"diffs":[[0,"log("],[-1,"\"hello\""],[1,"result"],[0,");\n "]],"start1":1734,"start2":1734,"length1":15,"length2":14}]],"length":2462,"saved":false}
{"ts":1364756335032,"patch":[[{"diffs":[[0,"nclude\n\n"],[1,"var io = require('socket.io').listen(app);\nvar fs = require('fs');\n\n"],[0,"var serv"]],"start1":457,"start2":457,"length1":16,"length2":84}]],"length":2530,"saved":false}
{"ts":1364756798861,"patch":[[{"diffs":[[0,"'fs');\n\n"],[1,"\n"],[0,"var serv"]],"start1":525,"start2":525,"length1":16,"length2":17},{"diffs":[[0,"q.url);\n"],[1,"        \n        if (parsedUrl.pathname == 'index.html') {\n            fs.readFile(__dirname + '/index.html',\n\n            function(err, data) {\n                if (err) {\n                    res.writeHead(500);\n                    return res.end('Error loading index.html');\n                }\n\n                res.writeHead(200);\n                res.end(data);\n            });\n  \n        }\n        \n"],[0,"        "]],"start1":642,"start2":642,"length1":16,"length2":416}]],"length":2931,"saved":false}
{"ts":1364756882573,"patch":[[{"diffs":[[0,"de\n\n"],[-1,"var io = require('socket.io').listen(app);\nvar fs = require('fs');\n\n\n"],[0,"var "]],"start1":461,"start2":461,"length1":77,"length2":8}]],"length":2862,"saved":false}
{"ts":1364756898451,"patch":[[{"diffs":[[0,"nclude\n\n"],[1,"var fs = require('fs');\n\n"],[0,"var serv"]],"start1":457,"start2":457,"length1":16,"length2":41},{"diffs":[[0," || 80);"],[1,"\n\nvar io = require('socket.io').listen(server);\n\n"]],"start1":2879,"start2":2879,"length1":8,"length2":57}]],"length":2936,"saved":false}
{"ts":1364756926408,"patch":[[{"diffs":[[0,"ame == '"],[1,"/"],[0,"index.ht"]],"start1":642,"start2":642,"length1":16,"length2":17}]],"length":2937,"saved":false}
{"ts":1364757210004,"patch":[[{"diffs":[[0,"        "],[1,"else "],[0,"if(parse"]],"start1":1007,"start2":1007,"length1":16,"length2":21}]],"length":2942,"saved":false}
{"ts":1364757334213,"patch":[[{"diffs":[[0,"n(server);\n\n"],[1,"io.sockets.on('connection', function (socket) {\n  socket.emit('news', { hello: 'world' });\n  socket.on('my other event', function (data) {\n    console.log(data);\n  });\n});\n\n"]],"start1":2930,"start2":2930,"length1":12,"length2":185}]],"length":3115,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364827691393,"patch":[[{"diffs":[[0,"on('"],[-1,"my other event"],[1,"refresh"],[0,"', f"]],"start1":3042,"start2":3042,"length1":22,"length2":15}]],"length":3108,"saved":false}
{"ts":1364827755277,"patch":[[{"diffs":[[0,"ole.log("],[1,"\"refresh: \" + "],[0,"data);\n "]],"start1":3082,"start2":3082,"length1":16,"length2":30}]],"length":3122,"saved":false}
{"ts":1364827966749,"patch":[[{"diffs":[[0," data);\n"],[1,"    socket.emit(\"refresh\")\n"],[0,"  });\n})"]],"start1":3103,"start2":3103,"length1":16,"length2":43}]],"length":3149,"saved":false}
{"ts":1364828192143,"patch":[[{"diffs":[[0,"\n    socket."],[1,"broadcast."],[0,"emit(\"refres"]],"start1":3110,"start2":3110,"length1":24,"length2":34}]],"length":3159,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364836988721,"patch":[[{"diffs":[[0,"');\n"],[-1,"var relyingParty = new openid.RelyingParty(\n    "],[1,"\n\n//"],[0,"'htt"]],"start1":96,"start2":96,"length1":56,"length2":12},{"diffs":[[0,"fy'\n"],[-1,"    null, // Realm (optional, specifies realm for OpenID authentication)\n    false, // Use stateless verification\n    false, // Strict mode\n    []); // List of extensions to enable and include"],[0,"\n\nva"]],"start1":223,"start2":223,"length1":200,"length2":8},{"diffs":[[0,"  }\n"],[-1,"        \n        else if(parsedUrl.pathname == '/authenticate')\n        { \n          // User supplied identifier\n          var query = querystring.parse(parsedUrl.query);\n          var identifier = query.openid_identifier;\n\n          // Resolve identifier, associate, and build authentication URL\n          relyingParty.authenticate(identifier, false, function(error, authUrl)\n              {\n                if (error)\n                {\n                  res.writeHead(200);\n                  res.end('Authentication failed: ' + error.message);\n                }\n                else if (!authUrl)\n                {\n                  res.writeHead(200);\n                  res.end('Authentication failed');\n                }\n                else\n                {\n                  res.writeHead(302, { Location: authUrl });\n                  res.end();\n                }\n              });\n        }\n        else if(parsedUrl.pathname == '/verify')\n        {\n            // Verify identity assertion\n            // NOTE: Passing just the URL is also possible\n            relyingParty.verifyAssertion(req, function(error, result)\n            {\n                console.log(result);\n              res.writeHead(200);\n              res.end(!error && result.authenticated \n                  ? 'Success :) :-)'\n                  : 'Failure :(');\n            });\n        }\n"],[0,"    "]],"start1":758,"start2":758,"length1":1374,"length2":8},{"diffs":[[0,"    });\n"],[1,"    \n"],[0,"server.l"]],"start1":1245,"start2":1245,"length1":16,"length2":21},{"diffs":[[0,"RT || 80);\n\n"],[1,"var passport = require('passport')\n  , OpenIDStrategy = require('passport-openid').Strategy;\n\npassport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    User.findOrCreate({ openId: identifier }, function(err, user) {\n      done(err, user);\n    });\n  }\n));\n\n"],[0,"var io = req"]],"start1":1286,"start2":1286,"length1":24,"length2":419}]],"length":1957,"saved":false}
{"ts":1364837051487,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        else\n        {\n            // Deliver an OpenID form on all other URLs\n            res.writeHead(200);\n            res.end('<!DOCTYPE html><html><body>'\n                + '<form method=\"get\" action=\"/authenticate\">'\n                + '<p>Login using OpenID</p>'\n                + '<input name=\"openid_identifier\" value=\"https://www.google.com/accounts/o8/id\" />'\n                + '<input type=\"submit\" value=\"Login\" />'\n                + '</form></body></html>');\n        }\n"],[0,"    "]],"start1":758,"start2":758,"length1":491,"length2":8}]],"length":1474,"saved":false}
{"ts":1364837284526,"patch":[[{"diffs":[[0,"ver("],[1,");"],[0,"\n    "],[-1,"function(req, res)\n    {\n        var parsedUrl = url.parse(req.url);\n        \n        if (parsedUrl.pathname == "],[1,"\n    \n// Accept the OpenID identifier and redirect the user to their OpenID\n// provider for authentication.  When complete, the provider will redirect\n// the user back to the application at:\n//     /auth/openid/return\nserver.post('/auth/openid', passport.authenticate('openid'));\n\n// The OpenID provider has redirected the user back to the application.\n// Finish the authentication process by verifying the assertion.  If valid,\n// the user will be logged in.  Otherwise, authentication has failed.\nserver.get('/auth/openid/return', \n  passport.authenticate('openid', { successRedirect: '/',\n                                       failureRedirect: '/login' }));\n                                       \n                                       \nserver.get("],[0,"'/in"]],"start1":292,"start2":292,"length1":125,"length2":768},{"diffs":[[0,"ex.html'"],[1,", function("],[0,") {\n    "]],"start1":1061,"start2":1061,"length1":16,"length2":27},{"diffs":[[0,") {\n        "],[1,"                            \n"],[0,"    fs.readF"]],"start1":1080,"start2":1080,"length1":24,"length2":53},{"diffs":[[0,"x.html',"],[-1,"\n\n           "],[0," functio"]],"start1":1155,"start2":1155,"length1":29,"length2":16},{"diffs":[[0,"rr, data) {\n"],[1,"                                "],[0,"            "]],"start1":1174,"start2":1174,"length1":24,"length2":56},{"diffs":[[0,"                "],[1,"             "],[1,"                   "],[0,"res.writeHead(50"]],"start1":1249,"start2":1249,"length1":32,"length2":64},{"diffs":[[0,"eHead(500);\n"],[1,"                                "],[0,"            "]],"start1":1305,"start2":1305,"length1":24,"length2":56},{"diffs":[[0,"    "],[-1,"}\n\n"],[1,"                                }\n                                "],[0,"    "]],"start1":1425,"start2":1425,"length1":11,"length2":74},{"diffs":[[0,"eHead(200);\n"],[1,"                                "],[0,"            "]],"start1":1519,"start2":1519,"length1":24,"length2":56},{"diffs":[[0,"    "],[1,"       "],[-1,"});\n"],[1,"        "],[0,"  "],[-1,"\n"],[0,"        "],[-1,"}\n"],[0,"    "],[1,"   "],[0,"});\n"],[1,"});\n        "],[0,"    "]],"start1":1602,"start2":1602,"length1":33,"length2":56},{"diffs":[[0,"\n  }\n));"],[-1,""],[0,""],[1,"\n\n\n\n\n"],[0,"\n\nvar io"]],"start1":2084,"start2":2084,"length1":16,"length2":21}]],"length":2363,"saved":false}
{"ts":1364837299431,"patch":[[{"diffs":[[-1,"var openid = require('openid');\n"],[0,"var "]],"start1":0,"start2":0,"length1":36,"length2":4}]],"length":2331,"saved":false}
{"ts":1364837326494,"patch":[[{"diffs":[[0,"ing');\n\n"],[1,"var passport = require('passport')\n  , OpenIDStrategy = require('passport-openid').Strategy;\n  "],[0,"\n//'http"]],"start1":61,"start2":61,"length1":16,"length2":111},{"diffs":[[0,");\n\n"],[-1,"var passport = require('passport')\n  , OpenIDStrategy = require('passport-openid').Strategy;"],[0,"\n\npa"]],"start1":1758,"start2":1758,"length1":100,"length2":8}]],"length":2334,"saved":false}
{"ts":1364837547459,"patch":[[{"diffs":[[0,"var "],[-1,"url"],[1,"express"],[0," = requi"]],"start1":0,"start2":0,"length1":15,"length2":19},{"diffs":[[0,"re('"],[-1,"url"],[1,"express"],[0,"');\nvar "],[-1,"querystring = require('querystring'"],[1,"app = express("],[0,");\n\n"]],"start1":19,"start2":19,"length1":54,"length2":37},{"diffs":[[0,"'\n\n\n"],[-1,"var fs = require('fs');\n\nvar server = require('http').createServer();\n    \n"],[0,"    "]],"start1":275,"start2":275,"length1":83,"length2":8},{"diffs":[[0,"/return\n"],[-1,"server"],[1,"app"],[0,".post('/"]],"start1":488,"start2":488,"length1":22,"length2":19},{"diffs":[[0,"failed.\n"],[-1,"server"],[1,"app"],[0,".get('/a"]],"start1":766,"start2":766,"length1":22,"length2":19},{"diffs":[[0,"   \n"],[-1,"server.get('/index.html', function() {\n                                    \n    fs.readFile(__dirname + '/index.html', function(err, data) {\n                                                if (err) {\n                                                    res.writeHead(500);\n                                                    return res.end('Error loading index.html');\n                                                }\n                                                res.writeHead(200);\n                                                res.end(data);\n                                            });\n});\n            \nserver"],[1,"            \napp"],[0,".lis"]],"start1":1010,"start2":1010,"length1":628,"length2":24},{"diffs":[[0,"}\n));\n\n\n"],[-1,"\n\n\n\n"],[0,"var io ="]],"start1":1360,"start2":1360,"length1":20,"length2":16},{"diffs":[[0,"ten("],[-1,"server"],[1,"app"],[0,");\n\n"]],"start1":1401,"start2":1401,"length1":14,"length2":11}]],"length":1629,"saved":false}
{"ts":1364837585800,"patch":[[{"diffs":[[0,"rategy;\n"],[-1,"  "],[1,"\nvar io = require('socket.io').listen(app);\n"],[0,"\n//'http"]],"start1":141,"start2":141,"length1":18,"length2":60},{"diffs":[[0,"rify'\n\n\n"],[1,"\n\npassport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    User.findOrCreate({ openId: identifier }, function(err, user) {\n      done(err, user);\n    });\n  }\n));\n\n"],[0,"    \n// "]],"start1":313,"start2":313,"length1":16,"length2":319},{"diffs":[[0,"\n\n\n\n"],[-1,"passport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    User.findOrCreate({ openId: identifier }, function(err, user) {\n      done(err, user);\n    });\n  }\n));\n\n\nvar io = require('socket.io').listen(app);"],[1,"\n"],[0,"\n\nio"]],"start1":1407,"start2":1407,"length1":352,"length2":9}]],"length":1631,"saved":false}
{"ts":1364837687251,"patch":[[{"diffs":[[0,"var "],[-1,"express"],[1,"app"],[0," = requi"]],"start1":0,"start2":0,"length1":19,"length2":15},{"diffs":[[0,"ss')"],[-1,";\nvar app = express();"],[1,"()\n  , server = require('http').createServer(app)\n  , io = require('socket.io').listen(server)"],[0,"\n\nva"]],"start1":24,"start2":24,"length1":30,"length2":102},{"diffs":[[0,"y;\n\n"],[-1,"var io = require('socket.io').listen(app);\n"],[0,"\n//'"]],"start1":214,"start2":214,"length1":51,"length2":8},{"diffs":[[0,"erify'\n\n"],[-1,"\n\n\n"],[0,"passport"]],"start1":337,"start2":337,"length1":19,"length2":16},{"diffs":[[0,"in' }));"],[1,"                               "],[0,"\n       "]],"start1":1292,"start2":1292,"length1":16,"length2":47},{"diffs":[[0,"   \n"],[-1,"                                       \n            \napp.listen(process.env.PORT || 80);\n\n\n\n\n\n\n"],[0,"io.s"]],"start1":1368,"start2":1368,"length1":103,"length2":8},{"diffs":[[0,"it('"],[-1,"news', { hello: 'world' }"],[1,"connected'"],[0,");\n "]],"start1":1431,"start2":1431,"length1":33,"length2":18},{"diffs":[[0,"\n  });\n}"],[-1,""],[0,""],[1,");\n\nserver.listen(process.env.PORT || 80"],[0,");\n\n"]],"start1":1562,"start2":1562,"length1":12,"length2":52}]],"length":1614,"saved":false}
{"ts":1364838071408,"patch":[[{"diffs":[[0,"rategy;\n"],[1,"  \napp.get('/', function(req, res) {\n  res.sendfile('public/index.html')\n})"],[0,"\n\n//'htt"]],"start1":209,"start2":209,"length1":16,"length2":91},{"diffs":[[0,"y'\n\n"],[-1,"passport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    User.findOrCreate({ openId: identifier }, function(err, user) {\n      done(err, user);\n    });\n  }\n));\n\n"],[0,"    "]],"start1":416,"start2":416,"length1":309,"length2":8},{"diffs":[[0,"in' }));    "],[1,"\n                                       \npassport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    User.findOrCreate({ openId: identifier }, function(err, user) {\n      done(err, user);\n    });\n  }\n));\n\n"],[0,"            "]],"start1":1066,"start2":1066,"length1":24,"length2":366}]],"length":1730,"saved":false}
{"ts":1364838152328,"patch":[[{"diffs":[[0,") {\n    "],[1,"//"],[0,"User.fin"]],"start1":1308,"start2":1308,"length1":16,"length2":18},{"diffs":[[0,"one("],[-1,"err, user"],[0,");\n   "],[1,"//"],[0," });"]],"start1":1389,"start2":1389,"length1":23,"length2":16}]],"length":1725,"saved":false}
{"ts":1364838227214,"patch":[[{"diffs":[[0,"{\n      "],[1,"//"],[0,"done();\n"]],"start1":1380,"start2":1380,"length1":16,"length2":18}]],"length":1727,"saved":false}
{"ts":1364838286418,"patch":[[{"diffs":[[0,": '/"],[-1,"login"],[1,"index.html"],[0,"' })"]],"start1":1059,"start2":1059,"length1":13,"length2":18}]],"length":1732,"saved":false}
{"ts":1364838304744,"patch":[[{"diffs":[[0,"rect: '/"],[-1,"index.html"],[1,"login"],[0,"' }));  "]],"start1":1055,"start2":1055,"length1":26,"length2":21}]],"length":1727,"saved":false}
{"ts":1364838541836,"patch":[[{"diffs":[[0,"erify'\n\n"],[1,"passport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    //User.findOrCreate({ openId: identifier }, function(err, user) {\n      //done();\n   // });\n  }\n));\n"],[0,"    \n// "]],"start1":412,"start2":412,"length1":16,"length2":313},{"diffs":[[0,"   \n"],[-1,"passport.use(new OpenIDStrategy({\n    returnURL: 'http://triggerrefresh.alexkey.c9.io/auth/openid/return',\n    realm: 'http://triggerrefresh.alexkey.c9.io/'\n  },\n  function(identifier, done) {\n    //User.findOrCreate({ openId: identifier }, function(err, user) {\n      //done();\n   // });\n  }\n));"],[0,"\n\n  "]],"start1":1412,"start2":1412,"length1":304,"length2":8}]],"length":1728,"saved":false}
{"ts":1364838606751,"patch":[[{"diffs":[[0,"e) {\n   "],[-1," //"],[0,"User.fin"]],"start1":608,"start2":608,"length1":19,"length2":16},{"diffs":[[0,"find"],[-1,"OrCreate"],[1,"ByOpenID"],[0,"({ o"]],"start1":621,"start2":621,"length1":16,"length2":16},{"diffs":[[0,"function"],[1," "],[0,"(err, us"]],"start1":658,"start2":658,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"//done("],[1,"return done(err, user"],[0,");\n   "],[-1,"//"],[0," });"]],"start1":683,"start2":683,"length1":23,"length2":35}]],"length":1738,"saved":false}
{"ts":1364838808294,"patch":[[{"diffs":[[0,"\n   "],[-1,"User.findByOpenID({ openId: identifier }, function (err, user) {\n      return done(err, user);\n   "],[1," return done(null, { identifier: identifier"],[0," })"],[-1,";"],[0,"\n  }"]],"start1":612,"start2":612,"length1":110,"length2":54}]],"length":1682,"saved":false}
{"ts":1364838823415,"patch":[[{"diffs":[[0,"    "],[-1,"return "],[0,"done"]],"start1":613,"start2":613,"length1":15,"length2":8}]],"length":1675,"saved":false}
{"ts":1364838901172,"patch":[[{"diffs":[[0,") {\n    "],[1,"return "],[0,"done(nul"]],"start1":609,"start2":609,"length1":16,"length2":23}]],"length":1682,"saved":false}
{"ts":1364838919728,"patch":[[{"diffs":[[0,"ey.c9.io"],[-1,"/"],[0,"'\n  },\n "]],"start1":566,"start2":566,"length1":17,"length2":16}]],"length":1681,"saved":false}
{"ts":1364839032536,"patch":[[{"diffs":[[0,"   \n"],[-1,"// Accept the OpenID identifier and redirect the user to their OpenID\n// provider for authentication.  When complete, the provider will redirect\n// the user back to the application at:\n//     /auth/openid/return\napp.post('/auth/openid', passport.authenticate('openid'));\n\n// The OpenID provider has redirected the user back to the application.\n// Finish the authentication process by verifying the assertion.  If valid,\n// the user will be logged in.  Otherwise, authentication has failed.\napp.get('/auth/openid/return', \n  passport.authenticate('openid', { successRedirect: '/',\n                                       failureRedirect: '/login' }));    \n                                       "],[1,"app.post('/auth/openid',\n  passport.authenticate('openid'));\n\napp.get('/auth/openid/return', \n  passport.authenticate('openid', { failureRedirect: '/login' }),\n  function(req, res) {\n    // Successful authentication, redirect home.\n    res.redirect('/');\n  });"],[0,"\n\n\n "]],"start1":671,"start2":671,"length1":701,"length2":268}]],"length":1248,"saved":false}
{"ts":1364839224863,"patch":[[{"diffs":[[0,"p.get('/"],[1,"index.html"],[0,"', funct"]],"start1":222,"start2":222,"length1":16,"length2":26}]],"length":1258,"saved":false}
{"ts":1364839259805,"patch":[[{"diffs":[[0,"openid',"],[-1,"\n "],[0," passpor"]],"start1":701,"start2":701,"length1":18,"length2":16}]],"length":1256,"saved":false}
{"ts":1364839307864,"patch":[[{"diffs":[[0,"eturn', "],[-1,"\n  "],[0,"passport"]],"start1":768,"start2":768,"length1":19,"length2":16},{"diffs":[[0,",\n  "],[-1,"function(req, res) {\n    // Successful authentication, redirect home.\n    res.redirect('/');\n"],[1,"                              function(req, res) {\n                                    // Successful authentication, redirect home.\n                                    res.redirect('/');\n                              "],[0,"  })"]],"start1":838,"start2":838,"length1":101,"length2":225}]],"length":1377,"saved":false}
{"ts":1364839583283,"patch":[[{"diffs":[[0,"     \n          "],[1,"/*"],[0,"                "]],"start1":1089,"start2":1089,"length1":32,"length2":34},{"diffs":[[0," });\n});"],[1,"\n*/"],[0,"\n\nserver"]],"start1":1329,"start2":1329,"length1":16,"length2":19}]],"length":1382,"saved":false}
{"ts":1364839612326,"patch":[[{"diffs":[[0,"});\n*/\n\n"],[-1,"server"],[1,"app"],[0,".listen("]],"start1":1334,"start2":1334,"length1":22,"length2":19}]],"length":1379,"saved":false}
{"ts":1364843422150,"patch":[[{"diffs":[[0,"(server)"],[1,";"],[0,"\n\nvar pa"]],"start1":114,"start2":114,"length1":16,"length2":17},{"diffs":[[0,"x.html')"],[1,";"],[0,"\n})"],[1,";"],[0,"\n\n//'htt"]],"start1":292,"start2":292,"length1":19,"length2":21},{"diffs":[[0,"ifier })"],[1,";"],[0,"\n  }\n));"]],"start1":666,"start2":666,"length1":16,"length2":17}]],"length":1383,"saved":false}
{"ts":1364843442584,"patch":[[{"diffs":[[0,"   \n"],[-1,"          /*        "],[0,"    "]],"start1":1095,"start2":1095,"length1":28,"length2":8},{"diffs":[[0,"});\n"],[-1,"*/"],[0,"\n\nap"]],"start1":1318,"start2":1318,"length1":10,"length2":8}]],"length":1361,"saved":false}
{"ts":1364843504159,"patch":[[{"diffs":[[0," });\n\n\n         "],[1,"app.listen(process.env.PORT || 80);"],[0,"                "]],"start1":1064,"start2":1064,"length1":32,"length2":67},{"diffs":[[0,";\n\n\n"],[-1,"app.listen(process.env.PORT || 80);"],[0,"\n\n"]],"start1":1355,"start2":1355,"length1":41,"length2":6}]],"length":1361,"saved":false}
{"ts":1364843531702,"patch":[[{"diffs":[[0,";\n\n\n"],[-1,"         app"],[1,"server"],[0,".lis"]],"start1":1067,"start2":1067,"length1":20,"length2":14}]],"length":1355,"saved":false}
{"ts":1364843568858,"patch":[[{"diffs":[[0,"tifier: "],[-1,"identifier"],[1,"'alex'"],[0," });\n  }"]],"start1":653,"start2":653,"length1":26,"length2":22}]],"length":1351,"saved":false}
{"ts":1364843631023,"patch":[[{"diffs":[[0,"   \n"],[-1,"app.post('/auth/openid', passport.authenticate('openid'));\n\napp.get('/auth/openid/return', passport.authenticate('openid', { failureRedirect: '/login' }),\n                                function(req, res) {\n                                    // Successful authentication, r"],[1,"// Accept the OpenID identifier and redirect the user to their OpenID\n// provider for authentication.  When complete, the provider will redirect\n// the user back to the application at:\n//     /auth/openid/return\napp.post('/auth/openid', passport.authenticate('openid'));\n\n// The OpenID provider has redirected the user back to the application.\n// Finish the authentication process by verifying the assertion.  If valid,\n// the user will be logged in.  Otherwise, authentication has failed.\napp.get('/auth/openid/return', \n  passport.authenticate('openid', { successR"],[0,"edirect"],[-1," home."],[1,": '/',"],[0,"\n   "]],"start1":681,"start2":681,"length1":296,"length2":587},{"diffs":[[0,"    "],[-1,"res.redirect('/');\n                               "],[1,"failureRedirect: '/login'"],[0," })"],[1,")"],[0,";\n\n\n"]],"start1":1297,"start2":1297,"length1":61,"length2":37}]],"length":1618,"saved":false}
{"ts":1364843829118,"patch":[[{"diffs":[[0,"ey.c9.io"],[1,"/"],[0,"'\n  },\n "]],"start1":579,"start2":579,"length1":16,"length2":17}]],"length":1619,"saved":false}
{"ts":1364843840738,"patch":[[{"diffs":[[0,"er: "],[-1,"'alex'"],[1,"identifier"],[0," });"]],"start1":658,"start2":658,"length1":14,"length2":18}]],"length":1623,"saved":false}
{"ts":1364843863674,"patch":[[{"diffs":[[0,"    "],[-1,"return "],[0,"done"]],"start1":626,"start2":626,"length1":15,"length2":8}]],"length":1616,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365351087663,"patch":[[{"diffs":[[1,"\n"],[0,"var "],[-1,"app"],[1,"express = require('express')\n  , app = express()\n  , partials"],[0," = r"]],"start1":0,"start2":0,"length1":11,"length2":70},{"diffs":[[0,"ress"],[-1,"')("],[1,"-partials'"],[0,")\n  "]],"start1":81,"start2":81,"length1":11,"length2":18},{"diffs":[[0,"pp)\n  , "],[-1,"io"],[1,"passport"],[0," = requi"]],"start1":140,"start2":140,"length1":18,"length2":24},{"diffs":[[0,"re('"],[-1,"socket.io').listen(server);\n\nvar passport"],[1,"passport')\n  , util"],[0," = r"]],"start1":164,"start2":164,"length1":49,"length2":27},{"diffs":[[0," = require('"],[-1,"passport"],[1,"util"],[0,"')\n  , OpenI"]],"start1":187,"start2":187,"length1":32,"length2":28},{"diffs":[[0,"tegy"],[-1,";"],[0,"\n  "],[-1,"\napp.get('/index.html', function(req, res) {\n  res.se"],[1,", passportSocketIo = require(\"passport.socketio\")\n  , io = require('socket.io').listen(server);\n\n\n    \n// Passport session setup.\n//   To support persistent login sessions, Passport needs to be able to\n//   serialize users into and deserialize users out of the session.  Typically,\n//   this will be as simple as storing the user ID when serializing, a"],[0,"nd"],[1," "],[0,"fi"],[-1,"le('public/index.html');\n});\n\n//'http://triggerrefresh.alexkey.c9.io/verify', // Verification URL (yours) 'http://triggerrefresh.azurewebsites.net/verify'\n"],[1,"nding\n//   the user by ID when deserializing.  However, since this example does not\n//   have a database of user records, the OpenID identifier is serialized and\n//   deserialized.\npassport.serializeUser(function(user, done) {\n  done(null, user.identifier);\n});\n\npassport.deserializeUser(function(identifier, done) {\n  done(null, { identifier: identifier });\n});\n\n// Use the OpenIDStrategy within Passport.\n//   Strategies in passport require a `validate` function, which accept\n//   credentials (in this case, an OpenID identifier), and invoke a callback\n//   with a user object."],[0,"\npas"]],"start1":258,"start2":258,"length1":224,"length2":948},{"diffs":[[0,"    "],[-1,"done(null, { identifier: identifier });\n  }\n));"],[1,"// asynchronous verification, for effect...\n    process.nextTick(function () {\n      "],[0,"\n    "],[-1,"\n// Accept the OpenID identifier and redirect the user to"],[1,"  // To keep the example simple, the user's OpenID identifier is returned to\n      // represent the logged-in user.  In a typical application, you would want\n      // to associate"],[0," the"],[-1,"ir"],[0," OpenID"],[-1,"\n// provider for authentication.  When complete, the provider will redirect\n// the user back to the application at:\n//     /auth/openid/return\napp.post('/auth/openid', passport.authenticate('openid'));\n\n// The OpenID provider has redirected "],[1," identifier with a user record in your database,\n      // and return that user instead.\n      return done(null, { identifier: identifier })\n    });\n  }\n));\n\n\n// configure Express\napp.configure(function() {\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'ejs');\n  app.use(express.logger());\n  app.use(express.cookieParser());\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.session({ secret: 'mooomomasdoiasdoiha' }));\n  // Initialize Passport!  Also use passport.session() middleware, to support\n  // persistent login sessions (recommended).\n  app.use(passport.initialize());\n  app.use(passport.session());\n  app.use(app.router);\n  app.use(express.static(__dirname + '/../../public'));\n});\n\n\n\nio.set(\"authorization\", passportSocketIo.authorize({\n    key: 'express.sid', //the cookie where express (or connect) stores its session id.\n    secret: 'mooomomasdoiasdoiha', //the session secret to parse the cookie\n    store: express.sessionStorage, //"],[0,"the "],[-1,"u"],[0,"se"],[-1,"r back to the application.\n// Finish the authentication process by verifying the assertion.  If valid,"],[1,"ssion store that express uses\n    fail: function(data, accept) { // *optional* callbacks on success or fail\n        accept(null, false); // second param takes boolean on whether or not to allow handshake\n    },\n    success: function(data, accept) {\n        accept(null, true);\n    }\n}));\n  \n\n//'verify', // Verification URL (yours) 'http://triggerrefresh.azurewebsites.net/verify'\n\napp.get('/', function(req, res){\n  res.render('index', { user: req.user });\n});\n\napp.get('/account', ensureAuthenticated, function(req, res){\n  res.render('account', { user: req.user });\n});\n\napp.get('/login', function(req, res){\n  res.render('login', { user: req.user });\n});\n\n    \n// POST /auth/openid\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  The first step in OpenID authentication will involve redirecting"],[0,"\n//"],[1,"  "],[0," the"]],"start1":1396,"start2":1396,"length1":483,"length2":2143},{"diffs":[[0,"ser "],[-1,"will be logged in.  Otherwise, authentication has failed.\napp.get('/auth/openid/return"],[1,"to their OpenID provider.  After authenticating, the OpenID\n//   provider will redirect the user back to this application at\n//   /auth/openid/return\napp.post('/auth/openid"],[0,"', \n"]],"start1":3541,"start2":3541,"length1":94,"length2":180},{"diffs":[[0,"nid', { "],[-1,"success"],[1,"failure"],[0,"Redirect"]],"start1":3749,"start2":3749,"length1":23,"length2":23},{"diffs":[[0,": '/"],[-1,"',\n                                    failureRedirect: '/login' }));\n\n\nserver.listen(process.env.PORT || 80);                  \n                     "],[1,"login' }),\n  function(req, res) {\n    res.redirect('/');\n  });\n\n\n// GET /auth/openid/return\n//   Use passport.authenticate() as route middleware to authenticate the\n//   request.  If authentication fails, the user will be redirected back to the\n//   login page.  Otherwise, the primary route function function will be called,\n//   which, in this example, will redirect the user to the home page.\napp.get('/auth/openid/return', \n  passport.authenticate('openid', { failureRedirect: '/login' }),\n  function(req, res) {\n    res.redirect('/');\n  });\n\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n\n"],[0,"\nio."]],"start1":3772,"start2":3772,"length1":158,"length2":636},{"diffs":[[0,"efresh\")"],[1,";"],[0,"\n  });\n}"]],"start1":4587,"start2":4587,"length1":16,"length2":17},{"diffs":[[0,");\n});\n\n"],[1,"app.listen(process.env.PORT || 80);\n\n// Simple route middleware to ensure user is authenticated.\n//   Use this route middleware on any resource that needs to be protected.  If\n//   the request is authenticated (typically via a persistent login session),\n//   the request will proceed.  Otherwise, the user will be redirected to the\n//   login page.\nfunction ensureAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) { return next(); }\n  res.redirect('/login');\n}\n"],[0,"\n\n\n"]],"start1":4600,"start2":4600,"length1":11,"length2":483}]],"length":5083,"saved":false}
{"ts":1365351102693,"patch":[[{"diffs":[[0,"e', 'ejs');\n"],[1,"  app.use(partials());\n"],[0,"  app.use(ex"]],"start1":1949,"start2":1949,"length1":24,"length2":47}]],"length":5106,"saved":false}
{"ts":1365351149423,"patch":[[{"diffs":[[0,"{ user: req.user"],[-1,""],[0,""],[1,", layout:'mobile'"],[0," });\n});\n\napp.ge"]],"start1":3152,"start2":3152,"length1":32,"length2":49},{"diffs":[[0,"{ user: req.user"],[1,", layout:'mobile'"],[0," });\n});\n\napp.ge"]],"start1":3280,"start2":3280,"length1":32,"length2":49},{"diffs":[[0,"req.user"],[1,", layout:'mobile'"],[0," });\n});"]],"start1":3391,"start2":3391,"length1":16,"length2":33}]],"length":5157,"saved":false}
{"ts":1365351208131,"patch":[[{"diffs":[[0,"req.user"],[-1,", layout:'mobile'"],[0,""],[1,""],[0," });\n});"]],"start1":3160,"start2":3160,"length1":33,"length2":16},{"diffs":[[0,"req.user"],[-1,", layout:'mobile'"],[0," });\n});"]],"start1":3271,"start2":3271,"length1":33,"length2":16},{"diffs":[[0,"user"],[-1,", layout:'mobile'"],[0," });"]],"start1":3361,"start2":3361,"length1":25,"length2":8}]],"length":5106,"saved":false}
{"ts":1365351338021,"patch":[[{"diffs":[[0,"s')\n"],[-1,"  , app = express()\n"],[0,"  , "]],"start1":30,"start2":30,"length1":28,"length2":8},{"diffs":[[0,"-partials')\n"],[1,"  , app = express()\n"],[0,"  , server ="]],"start1":65,"start2":65,"length1":24,"length2":44}]],"length":5106,"saved":false}
{"ts":1365351371580,"patch":[[{"diffs":[[0,");\n  }\n));\n\n"],[1,"  app.use(partials());\n  "],[0,"\n// configur"]],"start1":1825,"start2":1825,"length1":24,"length2":49},{"diffs":[[0,"'ejs');\n"],[-1,"  app.use(partials());"],[0,"\n  app.u"]],"start1":1978,"start2":1978,"length1":38,"length2":16}]],"length":5109,"saved":false}
{"ts":1365351390980,"patch":[[{"diffs":[[0,"('express')\n"],[1,"  , app = express()\n"],[0,"  , partials"]],"start1":22,"start2":22,"length1":24,"length2":44},{"diffs":[[0,"tials')\n"],[-1,"  , app = express()\n"],[0,"  , serv"]],"start1":89,"start2":89,"length1":36,"length2":16}]],"length":5109,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365351677182,"patch":[[{"diffs":[[0,"\n\n  "],[-1,"app.use(partials());"],[0,"\n  \n"]],"start1":1835,"start2":1835,"length1":28,"length2":8},{"diffs":[[0,"ion() {\n"],[1,"  app.use(partials());\n"],[0,"  app.se"]],"start1":1883,"start2":1883,"length1":16,"length2":39}]],"length":5112,"saved":false}
{"ts":1365351684427,"patch":[[{"diffs":[[0,"s');\n\n  "],[1,"//"],[0,"app.use("]],"start1":1984,"start2":1984,"length1":16,"length2":18}]],"length":5114,"saved":false}
{"ts":1365352762371,"patch":[[{"diffs":[[0,");\n});\n\n"],[-1,"app"],[1,"server"],[0,".listen("]],"start1":4631,"start2":4631,"length1":19,"length2":22}]],"length":5117,"saved":false}
{"ts":1365352988885,"patch":[[{"diffs":[[0,"s');\n\n  "],[-1,"//"],[0,"app.use("]],"start1":1984,"start2":1984,"length1":18,"length2":16}]],"length":5115,"saved":false}
{"ts":1365353119369,"patch":[[{"diffs":[[0," store: "],[-1,"express"],[1,"passport"],[0,".session"]],"start1":2681,"start2":2681,"length1":23,"length2":24}]],"length":5116,"saved":false}
{"ts":1365353225871,"patch":[[{"diffs":[[0,"re: "],[-1,"passport"],[1,"express"],[0,".session"],[-1,"Storage"],[0,", //"]],"start1":2685,"start2":2685,"length1":31,"length2":23}]],"length":5108,"saved":false}
{"ts":1365353663347,"patch":[[{"diffs":[[0," store: "],[-1,"express"],[1,"passport"],[0,".session"]],"start1":2681,"start2":2681,"length1":23,"length2":24}]],"length":5109,"saved":false}
{"ts":1365353685181,"patch":[[{"diffs":[[0,"s');\n\n  "],[1,"//"],[0,"app.use("]],"start1":1984,"start2":1984,"length1":16,"length2":18}]],"length":5111,"saved":false}
{"ts":1365353745665,"patch":[[{"diffs":[[0,"  key: '"],[-1,"express"],[1,"connect"],[0,".sid', /"]],"start1":2519,"start2":2519,"length1":23,"length2":23}]],"length":5111,"saved":false}
{"ts":1365353862050,"patch":[[{"diffs":[[0," store: "],[-1,"passport"],[1,"express"],[0,".session"]],"start1":2683,"start2":2683,"length1":24,"length2":23}]],"length":5110,"saved":false}
{"ts":1365353929318,"patch":[[{"diffs":[[0,".session"],[1,"()"],[0,", //the "]],"start1":2698,"start2":2698,"length1":16,"length2":18}]],"length":5112,"saved":false}
{"ts":1365354238086,"patch":[[{"diffs":[[0," }\n));\n\n"],[-1,"  "],[1,"\nvar session = express.session({ secret: 'mooomomasdoiasdoiha' });"],[0,"\n  \n// c"]],"start1":1829,"start2":1829,"length1":18,"length2":82},{"diffs":[[0,"use("],[-1,"express.session({ secret: 'mooomomasdoiasdoiha' })"],[1,"session"],[0,");\n "]],"start1":2196,"start2":2196,"length1":58,"length2":15},{"diffs":[[0,"re: "],[-1,"express."],[0,"session"],[-1,"()"],[0,", //"]],"start1":2708,"start2":2708,"length1":25,"length2":15}]],"length":5123,"saved":false}
{"ts":1365354337135,"patch":[[{"diffs":[[0,"'util')\n"],[1,"  , store = new express.session.MemoryStore\n"],[0,"  , Open"]],"start1":198,"start2":198,"length1":16,"length2":60},{"diffs":[[0,"store: s"],[-1,"ession"],[1,"tore"],[0,", //the "]],"start1":2749,"start2":2749,"length1":22,"length2":20}]],"length":5165,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365354364444,"patch":[[{"diffs":[[0,";\n\n\n"],[-1,"var session = express.session({ secret: 'mooomomasdoiasdoiha' });\n"],[0,"  "],[-1,"\n"],[0,"// c"]],"start1":1878,"start2":1878,"length1":77,"length2":10},{"diffs":[[0,"app.use("],[-1,"session"],[1,"express.session({ secret: 'mooomomasdoiasdoiha', store: store })"],[0,");\n  // "]],"start1":2169,"start2":2169,"length1":23,"length2":80}]],"length":5155,"saved":false}
{"ts":1365354630429,"patch":[[{"diffs":[[0,"cted');\n"],[1,"  socket.join('');\n"],[0,"  socket"]],"start1":4542,"start2":4542,"length1":16,"length2":35}]],"length":5174,"saved":false}
{"ts":1365354688528,"patch":[[{"diffs":[[0,"nnected'"],[-1,");"],[1," + socket.handshake.user);\n  "],[0,"\n  socke"]],"start1":4539,"start2":4539,"length1":18,"length2":45}]],"length":5201,"saved":false}
{"ts":1365354692497,"patch":[[{"diffs":[[0,"r);\n"],[-1,"  \n  socket.join('');\n"],[0,"  so"]],"start1":4570,"start2":4570,"length1":30,"length2":8}]],"length":5179,"saved":false}
{"ts":1365354772104,"patch":[[{"diffs":[[0,"ted'"],[-1," + socket.handshake.user"],[0,");\n "]],"start1":4543,"start2":4543,"length1":32,"length2":8}]],"length":5155,"saved":false}
{"ts":1365354938631,"patch":[[{"diffs":[[0,"cted');\n"],[1,"  var id = socket.handshake.user;\n"],[0,"  socket"]],"start1":4542,"start2":4542,"length1":16,"length2":50}]],"length":5189,"saved":false}
{"ts":1365355890192,"patch":[[{"diffs":[[0,";\n  "],[-1,"var id = "],[1,"socket.join("],[0,"sock"]],"start1":4548,"start2":4548,"length1":17,"length2":20},{"diffs":[[0,"ake.user"],[1,".identifier)"],[0,";\n  sock"]],"start1":4577,"start2":4577,"length1":16,"length2":28},{"diffs":[[0," data);\n"],[1,"    io.sockets.in(socket.handshake.user.identifier).emit('refresh')\n"],[0,"    sock"]],"start1":4669,"start2":4669,"length1":16,"length2":84}]],"length":5272,"saved":false}
{"ts":1365355896171,"patch":[[{"diffs":[[0,"sh')"],[-1,"\n    socket.broadcast.emit(\"refresh\")"],[0,";\n  "]],"start1":4740,"start2":4740,"length1":45,"length2":8}]],"length":5235,"saved":false}
