{"ts":1359847096521,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World from Cloud9\\n');\n}).listen(process.env.PORT);\n"]],"start1":0,"start2":0,"length1":0,"length2":191}]],"length":191}
{"contributors":[],"silentsave":false,"ts":1359847171969,"patch":[[{"diffs":[[1,"\n"],[0,"var "],[-1,"http"],[1,"openid"],[0," = r"]],"start1":0,"start2":0,"length1":12,"length2":15},{"diffs":[[0,"re('"],[-1,"http');\n"],[1,"openid');\nvar url = require('url');\nvar server = require('"],[0,"http"],[1,"')"],[0,".cre"]],"start1":19,"start2":19,"length1":20,"length2":72},{"diffs":[[0,"ver("],[1,"\n    "],[0,"function"],[-1," (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World from Cloud9\\n');\n})"],[1,"(req, res)\n    {\n        var parsedUrl = url.parse(req.url, true);\n        if(parsedUrl.pathname == '/verify')\n        {\n            // Verify identity assertion\n            var result = openid.verifyAssertion(req); // or req.url\n            res.writeHead(200);\n            res.end(result.authenticated ? 'Success  ' : 'Failure  ');\n        }\n        else if(parsedUrl.pathname == '/authenticate')\n        {\n            // Resolve identifier, associate, build authentication URL\n            openid.authenticate(\n                parsedUrl.query.openid_identifier, // user supplied identifier\n                'http://example.com/verify', // our callback URL\n                null, // realm (optional)\n                false, // attempt immediate authentication first?\n                function(authUrl)\n                {\n                    res.writeHead(302, { Location: authUrl });\n                    res.end();\n                });\n        }\n        else\n        {\n            // Deliver an OpenID form on all other URLs\n            res.writeHead(200);\n            res.end('<!DOCTYPE html><html><body>'\n                + '<form method=\"get\" action=\"/authenticate\">'\n                + '<p>Login using OpenID</p>'\n                + '<input name=\"openid_identifier\" />'\n                + '<input type=\"submit\" value=\"Login\" />'\n                + '</form></body></html>');\n        }\n    });\nserver"],[0,".lis"]],"start1":97,"start2":97,"length1":126,"length2":1412},{"diffs":[[0,"v.PORT);"],[-1,"\n"]],"start1":1523,"start2":1523,"length1":9,"length2":8}]],"length":1531,"saved":false}
{"ts":1359847334781,"patch":[[{"diffs":[[0,"p://"],[-1,"example.com"],[1,"triggerrefresh.alexkey.c9.io"],[0,"/ver"]],"start1":725,"start2":725,"length1":19,"length2":36}]],"length":1548,"saved":false}
{"ts":1359847370936,"patch":[[{"diffs":[[0,"ey.c9.io"],[1,":'+ process.env.PORT+ '"],[0,"/verify'"]],"start1":749,"start2":749,"length1":16,"length2":39}]],"length":1571,"saved":false}
{"ts":1359848012800,"patch":[[{"diffs":[[0,"sh.a"],[-1,"lexkey.c9.io:'+ process.env.PORT+ '"],[1,"zurewebsites.net"],[0,"/ver"]],"start1":741,"start2":741,"length1":43,"length2":24}]],"length":1552,"saved":false}
